{"version":3,"sources":["components/Input.js","services/api.js","services/cart.js","components/Content.js","components/ProductCart.jsx","components/Cart.jsx","components/SavedReviews.js","components/Review.js","components/Product.jsx","App.js","serviceWorker.js","index.js"],"names":["Input","this","props","handleChange","handleButton","className","type","placeholder","data-testid","onChange","onClick","to","React","Component","getCategories","a","fetch","request","json","getProductsFromCategoryAndQuery","categoryId","query","saveCartItens","cartItens","localStorage","setItem","JSON","stringify","readCartItens","parse","getItem","Content","readStorage","cartItem","setState","cart","getFromApi","data","categories","target","inputSearch","value","handleCategory","category","state","itens","results","itemList","handleCart","carrinho","find","item","id","prev","map","htmlFor","key","name","length","pathname","product","title","img","thumbnail","price","src","alt","ProductCart","addProductToState","quantity","originalPrice","addProduct","prevState","isButtonDisabled","removeOneProduct","removeWholeProduct","console","log","disabled","Cart","itensCount","filter","removeProduct","totalCart","Number","reduce","prevValue","currentValue","totalPriceCallback","SavedReviews","email","rating","opinion","ratingValue","Review","handleOpinions","opinions","reviews","handleRating","handleClick","actualReview","rows","cols","review","i","Product","location","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c40a300a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaShoppingCart } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nclass Input extends React.Component {\n  render() {\n    const { handleChange, handleButton } = this.props;\n    return (\n      <div className=\"header-div\">\n        <h2>Loja do Grupo 02</h2>\n\n        <div className=\"search-cart-div\">\n          <input\n            type=\"text\"\n            className=\"search-input\"\n            placeholder=\"Digite o nome de uma categoria ou produto\"\n            data-testid=\"query-input\"\n            onChange={ handleChange }\n          />\n\n          <button\n            type=\"button\"\n            onClick={ handleButton }\n            data-testid=\"query-button\"\n            className=\"search-button\"\n          >\n            Pesquisar\n          </button>\n          <Link\n            to=\"/cart\"\n            data-testid=\"shopping-cart-button\"\n          >\n            <FaShoppingCart\n              className=\"shopping-cart-icon\"\n            />\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  handleButton: PropTypes.func.isRequired,\n};\n\nexport default Input;\n","export async function getCategories() {\n  const request = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  return request.json();\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const request = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`);\n  return request.json();\n}\n","const CART_ITENS_KEY = 'in_cart';\n\nconst saveCartItens = (cartItens) => {\n  localStorage\n    .setItem(CART_ITENS_KEY, JSON.stringify(cartItens));\n};\n\nconst readCartItens = () => JSON.parse(localStorage.getItem(CART_ITENS_KEY));\n\nexport { saveCartItens, readCartItens };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Input from './Input';\nimport { getCategories, getProductsFromCategoryAndQuery } from '../services/api';\nimport { saveCartItens, readCartItens } from '../services/cart';\n\nclass Content extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      inputSearch: '',\n      category: '',\n      itemList: [],\n      categories: [],\n      cart: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getFromApi();\n    this.readStorage();\n  }\n\n  readStorage = () => {\n    const cartItem = readCartItens();\n    if (!cartItem) {\n      saveCartItens([]);\n    } else {\n      this.setState({\n        cart: cartItem,\n      });\n    }\n  }\n\n  getFromApi = async () => {\n    const data = await getCategories();\n    this.setState({ categories: data });\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({\n      inputSearch: target.value,\n    });\n  }\n\n  handleCategory = ({ target }) => {\n    this.setState({\n      inputSearch: '',\n      category: target.value,\n    }, this.handleButton);\n  }\n\n  handleButton = async () => {\n    const { inputSearch, category } = this.state;\n    const itens = await getProductsFromCategoryAndQuery(category, inputSearch);\n    const { results } = itens;\n    this.setState({\n      itemList: results,\n    });\n  }\n\n  handleCart = ({ target }) => {\n    const { itemList } = this.state;\n    const carrinho = itemList.find((item) => item.id === target.id);\n    this.setState(\n      (prev) => ({ cart: [...prev.cart, carrinho] }),\n      () => {\n        const { cart } = this.state;\n        saveCartItens(cart);\n      },\n    );\n  };\n\n  render() {\n    const { itemList, categories } = this.state;\n    return (\n      <div className=\"content-div\">\n        <div className=\"categories\">\n          <h3>Categorias:</h3>\n          { categories.map((category) => (\n            <label htmlFor={ category.id } key={ category.id }>\n              <input\n                type=\"radio\"\n                data-testid=\"category\"\n                name=\"category\"\n                id={ category.id }\n                value={ category.id }\n                onChange={ this.handleCategory }\n              />\n              { category.name }\n            </label>\n          )) }\n        </div>\n        <div className=\"input-products-div\">\n          <div className=\"input-div\">\n            <Input\n              handleChange={ this.handleChange }\n              value={ this.inputSearch }\n              handleButton={ this.handleButton }\n            />\n          </div>\n          <div className=\"all-products-div\">\n            {itemList.length === 0\n              ? (\n                <p\n                  data-testid=\"home-initial-message\"\n                >\n                  Digite algum termo de pesquisa ou escolha uma categoria.\n                </p>)\n              : (\n                itemList.map((item) => (\n                  <div key={ item.id }>\n                    <Link\n                      to={ { pathname: `/product/${item.id}`,\n                        state: {\n                          product: { ...item },\n                          name: item.title,\n                          img: item.thumbnail,\n                          price: item.price,\n                        },\n                      } }\n                      data-testid=\"product-detail-link\"\n                    >\n                      <div\n                        data-testid=\"product\"\n                        className=\"product-div\"\n                        key={ item.id }\n                      >\n                        <div className=\"product-name\">\n                          <h5>{ item.title }</h5>\n                        </div>\n                        <div className=\"product-img\">\n                          <img src={ item.thumbnail } alt={ item.title } />\n                          <p className=\"product-price\">{ `R$${item.price}` }</p>\n                        </div>\n                      </div>\n                    </Link>\n                    <button\n                      data-testid=\"product-add-to-cart\"\n                      type=\"button\"\n                      onClick={ this.handleCart }\n                      id={ item.id }\n                    >\n                      Adicionar ao carrinho\n                    </button>\n                  </div>\n                )))}\n          </div>\n          <div />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Content;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ProductCart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isButtonDisabled: true,\n    };\n  }\n\n  componentDidMount() {\n    this.addProductToState();\n  }\n\n  addProductToState = () => {\n    const { price } = this.props;\n\n    this.setState({\n      quantity: 1,\n      price,\n      originalPrice: price,\n    });\n  }\n\n  addProduct = () => {\n    const { originalPrice } = this.state;\n\n    this.setState((prevState) => ({\n      quantity: prevState.quantity + 1,\n      isButtonDisabled: false,\n      price: originalPrice * (prevState.quantity + 1),\n    }));\n\n    // console.log(quantity)\n  }\n\n  removeOneProduct = () => {\n    const { quantity, originalPrice } = this.state;\n\n    if (quantity === 2) {\n      this.setState({ isButtonDisabled: true });\n    }\n\n    this.setState((prevState) => ({\n      quantity: prevState.quantity - 1,\n      price: prevState.price - originalPrice,\n    }));\n\n    // console.log(price)\n  }\n\n  removeWholeProduct = () => {\n    console.log('removeu!');\n  }\n\n  render() {\n    const { id, title, thumbnail } = this.props;\n    // console.log(title);\n    const { isButtonDisabled, quantity, price } = this.state;\n    return (\n      <div className=\"product-cart-div\">\n        <div className=\"name-img-div\">\n          <div className=\"product-cart-name\">\n            <h6 data-testid=\"shopping-cart-product-name\">\n              { title }\n            </h6>\n          </div>\n          <div className=\"product-img\">\n            <img src={ thumbnail } alt={ title } />\n          </div>\n          <div />\n        </div>\n        <div className=\"quantity-price-div\">\n          <div className=\"quantity-price-div\">\n            <button\n              type=\"button\"\n              disabled={ isButtonDisabled }\n              onClick={ this.removeOneProduct }\n              id={ id }\n              data-testid=\"product-decrease-quantity\"\n            >\n              -\n            </button>\n            <p\n              className=\"product-quantity\"\n              data-testid=\"shopping-cart-product-quantity\"\n              id={ id }\n            >\n              { `Quantidade: ${quantity}` }\n            </p>\n            <button\n              type=\"button\"\n              onClick={ this.addProduct }\n              id={ id }\n              data-testid=\"product-increase-quantity\"\n            >\n              +\n            </button>\n            <p className=\"product-price\">{`R$${price}`}</p>\n            <button type=\"button\" onClick={ this.removeWholeProduct }>Remover</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProductCart.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  thumbnail: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { readCartItens } from '../services/cart';\nimport ProductCart from './ProductCart';\n\nexport default class Cart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cart: [],\n    };\n  }\n\n  componentDidMount() {\n    this.readStorage();\n  }\n\n  componentDidUpdate() {\n    this.totalCart();\n  }\n\n  itensCount = (id) => {\n    const { cart } = this.state;\n    const itens = cart.filter((item) => item.id === id);\n\n    return itens.length;\n  }\n\n  readStorage = () => {\n    const cartItens = readCartItens();\n    this.setState({\n      cart: cartItens,\n    });\n  }\n\n  removeProduct = () => {\n    console.log('removeu!');\n  }\n\n  totalCart = () => {\n    const { cart } = this.state;\n    const allPrices = cart.map((product) => Number(product.price));\n    const totalPrices = allPrices\n      .reduce((prevValue, currentValue) => prevValue + currentValue, 0);\n\n    return totalPrices;\n  }\n\n  render() {\n    // console.log(this.state.cart);\n    // console.log(this.totalCart)\n    const { cart } = this.state;\n    return (\n      <div className=\"cart-div\">\n        <div className=\"cart-header\">\n          <h2>Carrinho de compras</h2>\n          <Link to=\"/\">Voltar à Home</Link>\n        </div>\n        <div className=\"cart-products-div\">\n          {cart.length === 0\n            ? (\n              <h3 data-testid=\"shopping-cart-empty-message\">\n                Seu carrinho está vazio\n              </h3>\n            ) : (\n              cart.map((item) => (\n                <div key={ item.id }>\n                  <ProductCart\n                    { ...item }\n                    totalPriceCallback={ () => {} }\n                  />\n                </div>\n              )))}\n        </div>\n        <div>\n          <h3>{`Total da compra: R$${this.totalCart()}`}</h3>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { RatingView } from 'react-simple-star-rating';\nimport PropTypes from 'prop-types';\n\nexport default class SavedReviews extends Component {\n  render() {\n    const { email, rating, opinion } = this.props;\n    return (\n      <div id=\"review-div\">\n        <div className=\"review\">\n          <h2>{ email }</h2>\n          Nota:\n          <RatingView ratingValue={ rating } />\n          <p>{ opinion }</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nSavedReviews.propTypes = {\n  email: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n  opinion: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Rating } from 'react-simple-star-rating';\nimport SavedReviews from './SavedReviews';\n\nexport default class Review extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reviews: [],\n      email: '',\n      rating: 0,\n      opinion: '',\n    };\n  }\n\n  componentDidMount() {\n    const opinions = JSON.parse(localStorage.getItem('opinions'));\n    if (!opinions) return localStorage.setItem('opinions', JSON.stringify([]));\n    this.handleOpinions(opinions);\n  }\n\n  handleOpinions = (opinions) => {\n    this.setState({ reviews: opinions });\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  }\n\n  handleRating = (value) => {\n    this.setState({ rating: value });\n  }\n\n  handleClick = () => {\n    const { email, rating, opinion } = this.state;\n    const actualReview = {\n      email,\n      rating,\n      opinion,\n    };\n    this.setState(\n      (prevState) => ({ reviews: [...prevState.reviews, actualReview] }),\n      () => {\n        const { reviews } = this.state;\n        localStorage.setItem('opinions', JSON.stringify(reviews));\n      },\n    );\n  }\n\n  render() {\n    const { reviews, email, rating, opinion } = this.state;\n    return (\n      <div>\n        <h4>Avalie o produto:</h4>\n        <form>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={ email }\n            placeholder=\"Seu e-mail\"\n            onChange={ this.handleChange }\n          />\n          <div>\n            Nota:\n            <Rating onClick={ this.handleRating } ratingValue={ rating } />\n          </div>\n          <textarea\n            data-testid=\"product-detail-evaluation\"\n            name=\"opinion\"\n            rows=\"5\"\n            cols=\"21\"\n            placeholder=\"Digite sua opinião aqui (opcional)\"\n            value={ opinion }\n            onChange={ this.handleChange }\n          />\n          <div>\n            <button\n              type=\"button\"\n              onClick={ this.handleClick }\n            >\n              Avaliar\n            </button>\n          </div>\n        </form>\n        { reviews\n        && reviews.map((review, i) => <SavedReviews key={ i } { ...review } />) }\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FaShoppingCart } from 'react-icons/fa';\nimport Review from './Review';\nimport SavedReviews from './SavedReviews';\nimport { saveCartItens, readCartItens } from '../services/cart';\n\nexport default class Product extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cart: [],\n    };\n  }\n\n  componentDidMount() {\n    this.readStorage();\n  }\n\n  readStorage = () => {\n    const cartItem = readCartItens();\n    if (!cartItem) {\n      saveCartItens([]);\n    } else {\n      this.setState({\n        cart: cartItem,\n      });\n    }\n  }\n\n  handleCart = () => {\n    const { location: { state: { product } } } = this.props;\n    this.setState(\n      (prev) => ({ cart: [...prev.cart, product] }),\n      () => {\n        const { cart } = this.state;\n        saveCartItens(cart);\n      },\n    );\n  };\n\n  render() {\n    const { location: { state: { name, img, price, product } } } = this.props;\n    return (\n      <div className=\"single-product-page\">\n        {/* <h2>Esse é o container do Produto</h2> */}\n        <Link to=\"/\">Voltar à Home</Link>\n        <Link\n          data-testid=\"shopping-cart-button\"\n          to=\"/cart\"\n        >\n          <FaShoppingCart\n            className=\"shopping-cart-icon\"\n          />\n        </Link>\n\n        <div className=\"single-product-detail\">\n          <h3 data-testid=\"product-detail-name\">{ name }</h3>\n          <img src={ img } alt=\"\" />\n          <h4>{ price }</h4>\n        </div>\n        <button\n          data-testid=\"product-detail-add-to-cart\"\n          type=\"button\"\n          onClick={ this.handleCart }\n          id={ product.id }\n        >\n          Adiconar ao carrinho\n        </button>\n        <Review />\n        <SavedReviews />\n      </div>\n    );\n  }\n}\n\nProduct.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      img: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      product: PropTypes.objectOf(PropTypes.string).isRequired,\n    }),\n  }).isRequired,\n};\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Content from './components/Content';\nimport Cart from './components/Cart';\nimport Product from './components/Product';\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={ Content } />\n          <Route exact path=\"/cart\" component={ Cart } />\n          <Route exact path=\"/product/:id\" component={ Product } />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}